h2 class="question__title"
  = question.title
p class="question__body"
  = question.body

.subscription-links
  - if can?(:create, QuestionSubscription) && !current_user.subscribed?(question)
    = link_to 'Subscribe', question_subscriptions_path(question), 
        method: :post, 
        remote: true, 
        id: 'subscribe-link'

  - if can?(:destroy, @subscription)
    = link_to 'Unsubscribe', subscription_path(@subscription), 
        method: :delete, 
        remote: true, 
        id: 'unsubscribe-link'

- if %i[vote_for vote_against unvote].any? { |action| can? action, question }
  = render 'shared/vote', votable: question

.question-errors
  = render "shared/errors", resource: question

.question-comments-errors

ul class="question-comments"
  = render question.comments
- if can? :create, Comment
  = render 'comments/form', commentable: question, comment: @comment
  
div id="question-#{question.id}-files"
  - if question.files.attached?
    - question.files.each do |file|
      div id="file-#{file.id}"
        p= link_to file.filename.to_s, url_for(file)
        - if can? :destroy, file
          = link_to 'Delete file', attachment_path(file), method: :delete, remote: true

.links
  p Links
  ul class="question-links"
    - question.links.each do |link|
      li id="link-#{link.id}"
        .link-errors
          = render 'shared/errors', resource: link
        -if link.gist?
          = link.name
          script src="#{link.url}.js"
        - else
          = link_to link.name, link.url
        - if can? :destroy, link
          = link_to 'Delete link', link_path(link), method: :delete, remote: true

- if can? :create, Question
  = form_with model: question, class: "hidden", html: { id: "edit-question-#{question.id}" }, local: false do |form|
    .field
      = form.label :title
      br
      = form.text_field :title
    .field
      = form.label :body
      br
      = form.text_area :body
    .filed
      = form.label :files
      br
      = form.file_field :files, multiple: true, direct_upload: true
    p Links
    = form.fields_for :links do |link|
      = render 'link_fields', f: link
    .links
      = link_to_add_association 'Add link', form, :links
    = form.submit 'Save'

- if %i[udate destroy].any? { |action| can? action, question }
  p= link_to 'Edit', '#', class: 'edit-question-link', data: { question_id: question.id }
  p= link_to 'Delete', question_path(question), method: :delete
